class Score {
    // Constants
    static int digit_width;         // Bouunding box width
    static int double_digit_width;  // Double digit width
    static int mem_pos;             // Position in memory
    static int mem_offset;          // Position offset in memory

    // Fields
    field int total;                // Total score
    field int digit2;               // Hundreds digit
    field int digit1;               // Tens digit
    field int digit0;               // Ones digit

    function void init() {
        let digit_width = 1;
        let double_digit_width = digit_width + digit_width;
        let mem_offset = 1 + (8 * 32);
        let mem_pos = digit_width * 6 + mem_offset;
        return;
    }

    function void printSCORE() {
        do DrawScore.draw_s(mem_offset);
        do DrawScore.draw_c(digit_width + mem_offset);
        do DrawScore.draw_o(double_digit_width + mem_offset);
        do DrawScore.draw_r(double_digit_width + digit_width + mem_offset);
        do DrawScore.draw_e(double_digit_width + double_digit_width + mem_offset);
        do DrawScore.draw_z(double_digit_width + double_digit_width + digit_width + mem_offset);
        return;
    }

    constructor Score new() {
        do reset();
        return this;
    }

    method void reset() {
        let total = 0;
        let digit2 = 0;
        let digit1 = 0;
        let digit0 = 0;
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void render(int shift_x, int v) {
        if (v = 0) { do DrawScore.draw_0(mem_pos + shift_x); } else { 
        if (v = 1) { do DrawScore.draw_1(mem_pos + shift_x); } else { 
        if (v = 2) { do DrawScore.draw_2(mem_pos + shift_x); } else { 
        if (v = 3) { do DrawScore.draw_3(mem_pos + shift_x); } else { 
        if (v = 4) { do DrawScore.draw_4(mem_pos + shift_x); } else { 
        if (v = 5) { do DrawScore.draw_5(mem_pos + shift_x); } else { 
        if (v = 6) { do DrawScore.draw_6(mem_pos + shift_x); } else { 
        if (v = 7) { do DrawScore.draw_7(mem_pos + shift_x); } else { 
        if (v = 8) { do DrawScore.draw_8(mem_pos + shift_x); } else { 
        if (v = 9) { do DrawScore.draw_9(mem_pos + shift_x); }}}}}}}}}}
        return;
    }

    method void show() {
        if (total > 99) {
            do render(0, digit2);
            do render(digit_width, digit1);
            do render(double_digit_width, digit0);
        } else {if (total > 9) {
            do render(0, digit1);
            do render(digit_width, digit0);
        }
        else {if (total > -1) { do render(0, digit0); }}}
        return;
    }

    method void increment() {
        let total = total + 1;
        let digit0 = digit0 + 1;
        if (digit0 > 9) {
            let digit0 = 0;
            let digit1 = digit1 + 1;
            if (digit1 > 9) {
                let digit1 = 0;
                let digit2 = digit2 + 1;
            }
        }
        return;
    }
}