class Score {
    // Constants
    static int word_width;          // Width of a word
    static int double_word_width;   // Width of two words
    static int number_mem_offset;   // Memory offset for numbers
    static int score_mem_offset;    // Memory offset for "SCORE"

    // Fields
    field int total;                // Total score
    field int digit2;               // Hundreds digit
    field int digit1;               // Tens digit
    field int digit0;               // Ones digit

    function void init() {
        let word_width = 1;
        let double_word_width = word_width + word_width;
        let score_mem_offset = 1 + (8 * 32);
        let number_mem_offset = word_width * 6 + score_mem_offset;
        return;
    }

    function void printSCORE() {
        do DrawWord.draw_s(score_mem_offset);
        do DrawWord.draw_c(word_width + score_mem_offset);
        do DrawWord.draw_o(word_width * 2 + score_mem_offset);
        do DrawWord.draw_r(word_width * 3 + score_mem_offset);
        do DrawWord.draw_e(word_width * 4 + score_mem_offset);
        do DrawWord.draw_z(word_width * 5 + score_mem_offset);
        return;
    }

    constructor Score new() {
        do reset();
        return this;
    }

    method void reset() {
        let total = 0;
        let digit2 = 0;
        let digit1 = 0;
        let digit0 = 0;
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void render(int shift_x, int v) {
        if (v = 0) { do DrawWord.draw_0(number_mem_offset + shift_x); } else { 
        if (v = 1) { do DrawWord.draw_1(number_mem_offset + shift_x); } else { 
        if (v = 2) { do DrawWord.draw_2(number_mem_offset + shift_x); } else { 
        if (v = 3) { do DrawWord.draw_3(number_mem_offset + shift_x); } else { 
        if (v = 4) { do DrawWord.draw_4(number_mem_offset + shift_x); } else { 
        if (v = 5) { do DrawWord.draw_5(number_mem_offset + shift_x); } else { 
        if (v = 6) { do DrawWord.draw_6(number_mem_offset + shift_x); } else { 
        if (v = 7) { do DrawWord.draw_7(number_mem_offset + shift_x); } else { 
        if (v = 8) { do DrawWord.draw_8(number_mem_offset + shift_x); } else { 
        if (v = 9) { do DrawWord.draw_9(number_mem_offset + shift_x); }}}}}}}}}}
        return;
    }

    method void show() {
        if (total > 99) {
            do render(0, digit2);
            do render(word_width, digit1);
            do render(double_word_width, digit0);
        } else {if (total > 9) {
            do render(0, digit1);
            do render(word_width, digit0);
        }
        else {if (total > -1) { do render(0, digit0); }}}
        return;
    }

    method void increment() {
        let total = total + 1;
        let digit0 = digit0 + 1;
        if (digit0 > 9) {
            let digit0 = 0;
            let digit1 = digit1 + 1;
            if (digit1 > 9) {
                let digit1 = 0;
                let digit2 = digit2 + 1;
            }
        }
        return;
    }
}