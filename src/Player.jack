class Player {
    // Constants
    static int x_init;
    static int y_init;
    static int y_height;
    static int y_vel;
    // Position on screen
    field int x_pos;
    field int y_pos;
    // Position in memory
    field int memory_pos;
    // Animation frame
    field int skin;
    // Internal clock
    field int tick;
    // Player's value
    field boolean value;

    function void init() {
        let x_init = 4;
        let y_init = 128;
        let y_height = 32;
        let y_vel = 2;
        return;
    }

    constructor Player new() {
        do reset();
        return this;
    }

    method void reset() {
        let x_pos = x_init * 16;
        let y_pos = y_init - (y_height / 2);
        let memory_pos = x_init + (y_pos * 32);
        let skin = 0;
        let tick = 0;
        let value = false;
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void move(boolean up) {
        if (up) {
            if (y_pos > 0) {
                let y_pos = y_pos - y_vel;
                let memory_pos = memory_pos - (y_vel * 32);
            }
        } else {
            if (y_pos < (255 - y_height - y_vel)) {
                let y_pos = y_pos + y_vel;
                let memory_pos = memory_pos + (y_vel * 32);
            }
        }
        return;
    }

    method void setVal(boolean val) {
        let value = val;
        return;
    }

    method void tick() {
        return;
    }

    method void render() {
        do SpriteManager.draw_player(memory_pos);
        return;
    }

    method void update() {
        do tick();
        do render();
        return;
    }

    method int x() { return x_pos; }
    method int y() { return y_pos; }
}