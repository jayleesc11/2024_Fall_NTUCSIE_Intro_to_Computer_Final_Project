class Player {
    // Constants
    static int xInit;
    static int yInit;
    static int yHeight;
    static int yVel;
    // Position on screen
    field int xPos;
    field int yPos;
    // Position in memory
    field int memoryPos;
    // Animation frame
    field int skin;
    // Internal clock
    field int tick;
    // Player's value
    field boolean value;

    function void init() {
        let xInit = 4;
        let yInit = 128;
        let yHeight = 32;
        let yVel = 2;
        return;
    }

    constructor Player new() {
        do reset();
        return this;
    }

    method void reset() {
        let xPos = xInit * 16;
        let yPos = yInit - (yHeight / 2);
        let memoryPos = xInit + (yPos * 32);
        let skin = 0;
        let tick = 0;
        let value = false;
        return;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method void move(boolean up) {
        if (up) {
            if (yPos > 0) {
                let yPos = yPos - yVel;
                let memoryPos = memoryPos - (yVel * 32);
            }
        } else {
            if (yPos < (255 - yHeight - yVel)) {
                let yPos = yPos + yVel;
                let memoryPos = memoryPos + (yVel * 32);
            }
        }
        return;
    }

    method void setVal(boolean val) {
        let value = val;
        return;
    }

    method void tick() {
        return;
    }

    method void render() {
        do SpriteManager.draw_player(memoryPos);
        return;
    }

    method void update() {
        do tick();
        do render();
        return;
    }

    method int x() { return xPos; }
    method int y() { return yPos; }
}